// Function to update battery icon
function updateBatteryIcon(percentage, isCharging) {
    const batteryElement = document.getElementById('battery');
  
    if (isCharging) {
      batteryElement.classList.add('charging');
    } else {
      batteryElement.classList.remove('charging');
    }
  
    if (percentage <= 20) {
      batteryElement.classList.add('low');
      batteryElement.classList.remove('medium', 'high');
    } else if (percentage <= 50) {
      batteryElement.classList.add('medium');
      batteryElement.classList.remove('low', 'high');
    } else {
      batteryElement.classList.add('high');
      batteryElement.classList.remove('low', 'medium');
    }
  
    batteryElement.querySelector('.battery-text').textContent = `${percentage}%`;
  }
  
  // Function to format time with leading zeros
  function formatTime(time) {
    return time < 10 ? '0' + time : time;
  }
  
  // Function to update the current time
  function updateTime() {
    const timeElement = document.getElementById('time');
    const currentTime = new Date();
    let hours = currentTime.getHours();
    const minutes = formatTime(currentTime.getMinutes());
    let timeString = '';
  
    if (hours > 12) {
      hours -= 12;
      timeString = hours + ':' + minutes + ' PM';
    } else {
      if (hours === 0) {
        hours = 12;
      }
      timeString = hours + ':' + minutes + ' AM';
    }
  
    timeElement.textContent = 'Time: ' + timeString;
  }
  
  // Check if the browser is Chromium-based
  function isChromiumBased() {
    const userAgent = navigator.userAgent.toLowerCase();
    return /chrome|chromium|crios/.test(userAgent);
  }
  
  // Retrieve battery information using the Battery API
  function getBatteryInfo() {
    if ('getBattery' in navigator) {
      navigator.getBattery().then(function (battery) {
        const percentage = Math.floor(battery.level * 100);
        const isCharging = battery.charging;
        updateBatteryIcon(percentage, isCharging);
      });
    } else {
      // Fallback for browsers that do not support the Battery API
      // You can implement alternative methods here to retrieve battery information
      // For example, you can use a platform-specific API or rely on user-provided data
      updateBatteryIcon(80, false); // Provide sample values for battery percentage and charging status
    }
  }
  
  // Call the getBatteryInfo function to update the battery icon initially
  if (isChromiumBased()) {
    getBatteryInfo();
  }
  
  updateTime();
  
  // Update the time every second
  setInterval(updateTime, 1000);
  